#!/usr/bin/env python3

import os, sys

import base64

sys.path.insert(1, os.path.dirname(sys.path[0]))

from cryptography.hazmat.primitives import serialization

import appattest

appattest.appattest.appId = b'com.truepic.appattestdemo'
appattest.appattest.teamId = b'XKXEK7P8ZU'

nonce = base64.b64decode(b'/seDK6/n6KGrSKyfuTnF+YxSZn/p3gjX9Mjq3vl3R1k=')
keyId = base64.b64decode(b'ogPhWIqzauL/w2JJHClI310D8+0EjQxYpZyeCFckNTw=')
attest = base64.b64decode(
b'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'
)

def main() -> None:
    (pk, receipt) = appattest.verifyAppAttestAttestation(attest, nonce, keyId)

    print(pk.public_bytes(
        serialization.Encoding.PEM,
        serialization.PublicFormat.SubjectPublicKeyInfo).decode())
    print(receipt)

if __name__ == "__main__":
    main()

